D G "__PCH__" 0 194 ""4.081""
D G "__DEVICE__" 0 194 "2580"
D G "__DATE__" 0 194 ""08-Feb-11""
D G "__TIME__" 0 194 ""17:07:42"" "Standard Header file for the PIC18F2580 device ////////////////"
d G "PIN_A0" 2 25 "31744"
d G "PIN_A1" 2 26 "31745"
d G "PIN_A2" 2 27 "31746"
d G "PIN_A3" 2 28 "31747"
d G "PIN_A4" 2 29 "31748"
d G "PIN_A5" 2 30 "31749"
d G "PIN_A6" 2 31 "31750"
d G "PIN_A7" 2 32 "31751"
d G "PIN_B0" 2 34 "31752"
d G "PIN_B1" 2 35 "31753"
d G "PIN_B2" 2 36 "31754"
d G "PIN_B3" 2 37 "31755"
d G "PIN_B4" 2 38 "31756"
d G "PIN_B5" 2 39 "31757"
d G "PIN_B6" 2 40 "31758"
d G "PIN_B7" 2 41 "31759"
d G "PIN_C0" 2 43 "31760"
d G "PIN_C1" 2 44 "31761"
d G "PIN_C2" 2 45 "31762"
d G "PIN_C3" 2 46 "31763"
d G "PIN_C4" 2 47 "31764"
d G "PIN_C5" 2 48 "31765"
d G "PIN_C6" 2 49 "31766"
d G "PIN_C7" 2 50 "31767"
d G "PIN_E3" 2 52 "31779"
d G "FALSE" 2 55 "0"
d G "TRUE" 2 56 "1"
d G "BYTE" 2 58 "int8"
d G "BOOLEAN" 2 59 "int1"
d G "getc" 2 61 "getch"
d G "fgetc" 2 62 "getch"
d G "getchar" 2 63 "getch"
d G "putc" 2 64 "putchar"
d G "fputc" 2 65 "putchar"
d G "fgets" 2 66 "gets"
d G "fputs" 2 67 "puts"
d G "WDT_TIMEOUT" 2 73 "7"
d G "MCLR_FROM_SLEEP" 2 74 "11"
d G "MCLR_FROM_RUN" 2 75 "15"
d G "NORMAL_POWER_UP" 2 76 "12"
d G "BROWNOUT_RESTART" 2 77 "14"
d G "WDT_FROM_SLEEP" 2 78 "3"
d G "RESET_INSTRUCTION" 2 79 "0"
d G "RTCC_INTERNAL" 2 85 "0"
d G "RTCC_EXT_L_TO_H" 2 86 "32"
d G "RTCC_EXT_H_TO_L" 2 87 "48"
d G "RTCC_DIV_1" 2 89 "8"
d G "RTCC_DIV_2" 2 90 "0"
d G "RTCC_DIV_4" 2 91 "1"
d G "RTCC_DIV_8" 2 92 "2"
d G "RTCC_DIV_16" 2 93 "3"
d G "RTCC_DIV_32" 2 94 "4"
d G "RTCC_DIV_64" 2 95 "5"
d G "RTCC_DIV_128" 2 96 "6"
d G "RTCC_DIV_256" 2 97 "7"
d G "RTCC_OFF" 2 99 "0x80"
d G "RTCC_8_BIT" 2 101 "0x40"
d G "WDT_ON" 2 112 "0x100"
d G "WDT_OFF" 2 113 "0"
d G "T1_DISABLED" 2 119 "0"
d G "T1_INTERNAL" 2 120 "0x85"
d G "T1_EXTERNAL" 2 121 "0x87"
d G "T1_EXTERNAL_SYNC" 2 122 "0x83"
d G "T1_CLK_OUT" 2 124 "8"
d G "T1_DIV_BY_1" 2 126 "0"
d G "T1_DIV_BY_2" 2 127 "0x10"
d G "T1_DIV_BY_4" 2 128 "0x20"
d G "T1_DIV_BY_8" 2 129 "0x30"
d G "T2_DISABLED" 2 134 "0"
d G "T2_DIV_BY_1" 2 135 "4"
d G "T2_DIV_BY_4" 2 136 "5"
d G "T2_DIV_BY_16" 2 137 "6"
d G "T3_DISABLED" 2 143 "0"
d G "T3_INTERNAL" 2 144 "0x85"
d G "T3_EXTERNAL" 2 145 "0x87"
d G "T3_EXTERNAL_SYNC" 2 146 "0x83"
d G "T3_DIV_BY_1" 2 148 "0"
d G "T3_DIV_BY_2" 2 149 "0x10"
d G "T3_DIV_BY_4" 2 150 "0x20"
d G "T3_DIV_BY_8" 2 151 "0x30"
d G "CCP_OFF" 2 157 "0"
d G "CCP_CAPTURE_FE" 2 158 "4"
d G "CCP_CAPTURE_RE" 2 159 "5"
d G "CCP_CAPTURE_DIV_4" 2 160 "6"
d G "CCP_CAPTURE_DIV_16" 2 161 "7"
d G "CCP_COMPARE_SET_ON_MATCH" 2 162 "8"
d G "CCP_COMPARE_CLR_ON_MATCH" 2 163 "9"
d G "CCP_COMPARE_INT" 2 164 "0xA"
d G "CCP_COMPARE_INT_AND_TOGGLE" 2 165 "0x2"
d G "CCP_COMPARE_RESET_TIMER" 2 166 "0xB"
d G "CCP_PWM" 2 167 "0xC"
d G "CCP_PWM_PLUS_1" 2 168 "0x1c"
d G "CCP_PWM_PLUS_2" 2 169 "0x2c"
d G "CCP_PWM_PLUS_3" 2 170 "0x3c"
d G "SPI_MASTER" 2 178 "0x20"
d G "SPI_SLAVE" 2 179 "0x24"
d G "SPI_L_TO_H" 2 180 "0"
d G "SPI_H_TO_L" 2 181 "0x10"
d G "SPI_CLK_DIV_4" 2 182 "0"
d G "SPI_CLK_DIV_16" 2 183 "1"
d G "SPI_CLK_DIV_64" 2 184 "2"
d G "SPI_CLK_T2" 2 185 "3"
d G "SPI_SS_DISABLED" 2 186 "1"
d G "SPI_SAMPLE_AT_END" 2 188 "0x8000"
d G "SPI_XMIT_L_TO_H" 2 189 "0x4000"
d G "UART_ADDRESS" 2 195 "2"
d G "UART_DATA" 2 196 "4"
d G "UART_AUTODETECT" 2 197 "8"
d G "UART_AUTODETECT_NOWAIT" 2 198 "9"
d G "UART_WAKEUP_ON_RDA" 2 199 "10"
d G "UART_SEND_BREAK" 2 200 "13"
d G "VREF_LOW" 2 204 "0xa0"
d G "VREF_HIGH" 2 205 "0x80"
d G "VREF_F5" 2 207 "0x40"
d G "VREF_COMP" 2 208 "0x10"
d G "LVD_LVDIN" 2 213 "0x1F"
d G "LVD_45" 2 214 "0x1E"
d G "LVD_42" 2 215 "0x1D"
d G "LVD_40" 2 216 "0x1C"
d G "LVD_38" 2 217 "0x1B"
d G "LVD_36" 2 218 "0x1A"
d G "LVD_35" 2 219 "0x19"
d G "LVD_33" 2 220 "0x18"
d G "LVD_30" 2 221 "0x17"
d G "LVD_28" 2 222 "0x16"
d G "LVD_27" 2 223 "0x15"
d G "LVD_25" 2 224 "0x14"
d G "LVD_24" 2 225 "0x13"
d G "LVD_23" 2 226 "0x12"
d G "LVD_22" 2 227 "0x11"
d G "LVD_21" 2 228 "0x10"
d G "LVD_TRIGGER_BELOW" 2 230 "0"
d G "LVD_TRIGGER_ABOVE" 2 231 "0x80"
d G "OSC_31KHZ" 2 237 "0"
d G "OSC_125KHZ" 2 238 "0x10"
d G "OSC_250KHZ" 2 239 "0x20"
d G "OSC_500KHZ" 2 240 "0x30"
d G "OSC_1MHZ" 2 241 "0x40"
d G "OSC_2MHZ" 2 242 "0x50"
d G "OSC_4MHZ" 2 243 "0x60"
d G "OSC_8MHZ" 2 244 "0x70"
d G "OSC_16MHZ" 2 245 "0x4060"
d G "OSC_32MHZ" 2 246 "0x4070"
d G "OSC_TIMER1" 2 248 "1"
d G "OSC_INTRC" 2 249 "2"
d G "OSC_NORMAL" 2 250 "0"
d G "OSC_IDLE_MODE" 2 252 "0x80"
d G "OSC_31250" 2 253 "0x8000"
d G "OSC_PLL_ON" 2 254 "0x4000"
d G "OSC_PLL_OFF" 2 255 "0"
d G "OSC_STATE_STABLE" 2 259 "4"
d G "OSC_STATE_EXT_RUNNING" 2 260 "8"
d G "ADC_OFF" 2 267 "0" "ADC Off"
d G "ADC_CLOCK_DIV_2" 2 268 "0x100"
d G "ADC_CLOCK_DIV_4" 2 269 "0x04"
d G "ADC_CLOCK_DIV_8" 2 270 "0x01"
d G "ADC_CLOCK_DIV_16" 2 271 "0x05"
d G "ADC_CLOCK_DIV_32" 2 272 "0x02"
d G "ADC_CLOCK_DIV_64" 2 273 "0x06"
d G "ADC_CLOCK_INTERNAL" 2 274 "0x07" "Internal 2-6us"
d G "ADC_TAD_MUL_0" 2 276 "0x00"
d G "ADC_TAD_MUL_2" 2 277 "0x08"
d G "ADC_TAD_MUL_4" 2 278 "0x10"
d G "ADC_TAD_MUL_6" 2 279 "0x18"
d G "ADC_TAD_MUL_8" 2 280 "0x20"
d G "ADC_TAD_MUL_12" 2 281 "0x28"
d G "ADC_TAD_MUL_16" 2 282 "0x30"
d G "ADC_TAD_MUL_20" 2 283 "0x38"
d G "NO_ANALOGS" 2 286 "0x0F" "None"
d G "ALL_ANALOG" 2 287 "0x00" "A0 A1 A2 A3 A5 B1 B4 B0"
d G "AN0_TO_AN9" 2 288 "0x05" "A0 A1 A2 A3 A5 B1 B4"
d G "AN0_TO_AN8" 2 289 "0x06" "A0 A1 A2 A3 A5 B1"
d G "AN0_TO_AN4" 2 290 "0x0A" "A0 A1 A2 A3 A5"
d G "AN0_TO_AN3" 2 291 "0x0B" "A0 A1 A2 A3"
d G "AN0_TO_AN2" 2 292 "0x0C" "A0 A1 A2"
d G "AN0_TO_AN1" 2 293 "0x0D" "A0 A1"
d G "AN0" 2 294 "0x0E" "A0"
d G "AN0_TO_AN11_ANALOG" 2 295 "0x03" "!old only provided for compatibility"
d G "AN0_TO_AN10_ANALOG" 2 296 "0x04" "!old only provided for compatibility"
d G "AN0_TO_AN9_ANALOG" 2 297 "0x05" "!old only provided for compatibility"
d G "AN0_TO_AN8_ANALOG" 2 298 "0x06" "!old only provided for compatibility"
d G "AN0_TO_AN4_ANALOG" 2 299 "0x0A" "!old only provided for compatibility"
d G "AN0_TO_AN3_ANALOG" 2 300 "0x0B" "!old only provided for compatibility"
d G "AN0_TO_AN2_ANALOG" 2 301 "0x0C" "!old only provided for compatibility"
d G "AN0_TO_AN1_ANALOG" 2 302 "0x0D" "!old only provided for compatibility"
d G "AN0_ANALOG" 2 303 "0x0E" "!old only provided for compatibility"
d G "VSS_VDD" 2 306 "0x00" "Range 0-Vdd"
d G "VREF_VREF" 2 307 "0x30" "Range VrefL-VrefH"
d G "VREF_VDD" 2 308 "0x20" "Range VrefL-Vdd"
d G "VSS_VREF" 2 309 "0x10" "Range 0-VrefH"
d G "ADC_START_AND_READ" 2 313 "7" "This is the default if nothing is specified"
d G "ADC_START_ONLY" 2 314 "1"
d G "ADC_READ_ONLY" 2 315 "6"
d G "L_TO_H" 2 327 "0x40"
d G "H_TO_L" 2 328 "0"
d G "GLOBAL" 2 330 "0xF2C0"
d G "INT_RTCC" 2 331 "0xF220"
d G "INT_TIMER0" 2 332 "0xF220"
d G "INT_TIMER1" 2 333 "0x9D01"
d G "INT_TIMER2" 2 334 "0x9D02"
d G "INT_TIMER3" 2 335 "0xA002"
d G "INT_EXT" 2 336 "0xF210"
d G "INT_EXT1" 2 337 "0xF008"
d G "INT_EXT2" 2 338 "0xF010"
d G "INT_RB" 2 339 "0xFFF208"
d G "INT_AD" 2 340 "0x9D40"
d G "INT_RDA" 2 341 "0x9D20"
d G "INT_TBE" 2 342 "0x9D10"
d G "INT_SSP" 2 343 "0x9D08"
d G "INT_CCP1" 2 344 "0x9D04"
d G "INT_BUSCOL" 2 345 "0xA008"
d G "INT_LOWVOLT" 2 346 "0xA004"
d G "INT_CANIRX" 2 347 "0xA380"
d G "INT_CANWAKE" 2 348 "0xA340"
d G "INT_CANERR" 2 349 "0xA320"
d G "INT_EEPROM" 2 350 "0xA010"
d G "INT_CANTX2" 2 351 "0xA310"
d G "INT_CANTX1" 2 352 "0xA308"
d G "INT_CANTX0" 2 353 "0xA304"
d G "INT_CANRX1" 2 354 "0xA302"
d G "INT_CANRX0" 2 355 "0xA301"
d G "INT_OSCF" 2 356 "0xA080"
D G "GREEN" 1 35 "PIN_A0"
D G "YELLOW" 1 36 "PIN_C2"
D G "RED" 1 37 "PIN_A1"
D G "CAN_RS" 1 38 "pin_c5"
D G "CAN_USE_EXTENDED_ID" 1 41 "FALSE"
D G "CAN_BRG_PRESCALAR" 1 42 "9" "THIS ONE SETS CAN BAUD RATE TO 62500 kbps!"
D G "__CCS_CAN18xxx8_LIB_DEFINES__" 4 20 ""
D G "CAN_DO_DEBUG" 4 23 "FALSE"
D G "CAN_BRG_SYNCH_JUMP_WIDTH" 4 31 "0" "synchronized jump width (def: 1 x Tq)"
D G "CAN_BRG_SEG_2_PHASE_TS" 4 39 "TRUE" "phase segment 2 time select bit (def: freely programmable)"
D G "CAN_BRG_SAM" 4 43 "0" "sample of the can bus line (def: bus line is sampled 1 times prior to sample point)"
D G "CAN_BRG_PHASE_SEGMENT_1" 4 47 "5" "phase segment 1 (def: 6 x Tq)"
D G "CAN_BRG_PROPAGATION_TIME" 4 51 "2" "propagation time select (def: 3 x Tq)"
D G "CAN_BRG_WAKE_FILTER" 4 55 "FALSE" "selects can bus line filter for wake up bit"
D G "CAN_BRG_PHASE_SEGMENT_2" 4 59 "5" "phase segment 2 time select (def: 6 x Tq)"
D G "CAN_USE_RX_DOUBLE_BUFFER" 4 63 "TRUE" "if buffer 0 overflows, do NOT use buffer 1 to put buffer 0 data"
D G "CAN_ENABLE_DRIVE_HIGH" 4 67 "0"
D G "CAN_ENABLE_CAN_CAPTURE" 4 71 "0"
E G "CAN_OP_CONFIG" 4 74 "4"
E G "CAN_OP_LISTEN" 4 74 "3"
E G "CAN_OP_LOOPBACK" 4 74 "2"
E G "CAN_OP_DISABLE" 4 74 "1"
E G "CAN_OP_NORMAL" 4 74 "0"
E G "CAN_WIN_RX0" 4 75 "0"
E G "CAN_WIN_RX1" 4 75 "5"
E G "CAN_WIN_TX0" 4 75 "4"
E G "CAN_WIN_TX1" 4 75 "3"
E G "CAN_WIN_TX2" 4 75 "2" "can control"
V G "CANCON" 4 83 "{int1 void0,int3 win,int1 abat,int3 reqop}"
E G "CAN_INT_WAKEUP" 4 87 "7"
E G "CAN_INT_RX0" 4 87 "6"
E G "CAN_INT_RX1" 4 87 "5"
E G "CAN_INT_TX0" 4 87 "4"
E G "CAN_INT_TX1" 4 87 "3"
E G "CAN_INT_TX2" 4 87 "2"
E G "CAN_INT_ERROR" 4 87 "1"
E G "CAN_INT_NO" 4 87 "0" "can status register READ-ONLY"
V G "CANSTAT" 4 95 "{int1 void0,int3 icode,int1 void4,int3 opmode}"
V G "COMSTAT" 4 108 "{int1 ewarn,int1 rxwarn,int1 txwarn,int1 rxbp,int1 txbp,int1 txbo,int1 rx1ovfl,int1 rx0ovfl}"
V G "BRGCON1" 4 115 "{int6 brp,int2 sjw}"
V G "BRGCON2" 4 124 "{int3 prseg,int3 seg1ph,int1 sam,int1 seg2phts}"
V G "BRGCON3" 4 133 "{int3 seg2ph,int3 void543,int1 wakfil,int1 void7}"
V G "CIOCON" 4 142 "{int4 void3210,int1 cancap,int1 endrhi,int2 void76}"
V G "TXB0CON" 4 155 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB1CON" 4 156 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXB2CON" 4 157 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
V G "TXBaCON" 4 158 "{int2 txpri,int1 void2,int1 txreq,int1 txerr,int1 txlarb,int1 txabt,int1 void7}"
D G "RX0MASK" 4 181 "0xF1B" "rxm0eidl"
D G "RX1MASK" 4 182 "0xF1F" "rxm1eidl"
D G "RX0FILTER0" 4 183 "0xF03" "rxf0eidl"
D G "RX0FILTER1" 4 184 "0xF07" "rxf1eidl"
D G "RX1FILTER2" 4 185 "0xF0B" "rxf2eidl"
D G "RX1FILTER3" 4 186 "0xF0F" "rxf3eidl"
D G "RX1FILTER4" 4 187 "0xF13" "rxf4eidl"
D G "RX1FILTER5" 4 188 "0xF17" "rxf5eidl"
D G "RXB0ID" 4 189 "0xF64" "rxb0eidl"
D G "RXB1ID" 4 190 "0xF54" "rxb1eidl"
D G "TXB0ID" 4 191 "0xF44" "txb0eidl"
D G "TXB1ID" 4 192 "0xF34" "txb1eidl"
D G "TXB2ID" 4 193 "0xF24" "tsb2eidl"
D G "TXRXBaID" 4 194 "0xF64"
V G "TXB0DLC" 4 211 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB1DLC" 4 212 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXB2DLC" 4 213 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
V G "TXBaDLC" 4 214 "{int4 dlc,int2 void54,int1 rtr,int1 void7}"
E G "CAN_RX_ALL" 4 225 "3"
E G "CAN_RX_EXT" 4 225 "2"
E G "CAN_RX_STD" 4 225 "1"
E G "CAN_RX_VALID" 4 225 "0" "receive buffer 0 control register"
V G "RXB0CON" 4 236 "{int1 filthit0,int1 jtoff,int1 rxb0dben,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "RXB1CON" 4 246 "{int3 filthit,int1 rxrtrro,int1 void4,int2 rxm,int1 rxful}"
V G "TXRXBaSIDL" 4 269 "{int3 void012,int1 ext,int1 srr,int3 void567}"
V G "RXB0DLC" 4 280 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXB1DLC" 4 281 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
V G "RXBaDLC" 4 282 "{int4 dlc,int1 rb0,int1 rb1,int1 rtr,int1 void7}"
D G "CAN_MASK_ACCEPT_ALL" 4 337 "0"
F G "can_init" 4 360 "void()"
F G "can_set_baud" 4 361 "void()"
F G "can_set_mode" 4 362 "void(CAN_OP_MODE mode)"
V L "mode" 4 362 "CAN_OP_MODE"
F G "can_set_id" 4 363 "void(*int8 addr,int32 id,int8 ext)"
V L "addr" 4 363 "*int8"
V L "id" 4 363 "int32"
V L "ext" 4 363 "int8"
F G "can_get_id" 4 364 "int32(*int8 addr,int8 ext)"
V L "addr" 4 364 "*int8"
V L "ext" 4 364 "int8"
F G "can_putd" 4 365 "int8(int32 id,*int8 data,int8 len,int8 priority,int8 ext,int8 rtr)"
V L "id" 4 365 "int32"
V L "data" 4 365 "*int8"
V L "len" 4 365 "int8"
V L "priority" 4 365 "int8"
V L "ext" 4 365 "int8"
V L "rtr" 4 365 "int8"
F G "can_getd" 4 366 "int8(int32 id,*int8 data,int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat)"
V L "id" 4 366 "int32"
V L "data" 4 366 "*int8"
V L "len" 4 366 "int8"
V L "stat" 4 366 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
D G "can_debug" 3 61 ""
D G "can_kbhit" 3 66 "()                 (RXB0CON.rxful || RXB1CON.rxful)"
D G "can_tbe" 3 67 "()                   (!TXB0CON.txreq || !TXB1CON.txreq || !TXB2CON.txreq)"
D G "can_abort" 3 68 "()                 (CANCON.abat=1)"
C L "can_getd" 3 65 11 "FUNCTION"
F G "can_init" 3 88 "void()"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_init" 3 65 1 "FUNCTION"
C L "can_set_baud" 3 65 6 "FUNCTION"
F G "can_set_baud" 3 127 "void()"
F G "can_set_mode" 3 140 "void()"
V L "mode" 3 140 "CAN_OP_MODE"
C L "can_set_id" 3 65 8 "FUNCTION"
F G "can_set_id" 3 160 "void(CAN_OP_MODE mode)"
V L "addr" 3 160 "*int8"
V L "id" 3 160 "int32"
V L "ext" 3 160 "int8"
V L "ptr" 3 161 "*int8"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 2 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_set_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 9 "FUNCTION"
F G "can_get_id" 3 220 "int32(int32 id,int8 ext)"
V L "addr" 3 220 "*int8"
V L "ext" 3 220 "int8"
V L "ret" 3 221 "int32"
V L "ptr" 3 222 "*int8"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_get_id" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 15 "FUNCTION"
F G "can_putd" 3 274 "int8()"
V L "id" 3 274 "int32"
V L "data" 3 274 "*int8"
V L "len" 3 274 "int8"
V L "priority" 3 274 "int8"
V L "ext" 3 274 "int8"
V L "rtr" 3 274 "int8"
V L "i" 3 275 "int8"
V L "txd0" 3 276 "*int8"
V L "port" 3 277 "int8"
C L "can_putd" 3 65 2 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_putd" 3 65 1 "FUNCTION"
C L "can_getd" 3 65 11 "FUNCTION"
F G "can_getd" 3 357 "int8(int8 priority,int8 ext,int8 rtr,*int8 s2,int8 n)"
V L "id" 3 357 "int32"
V L "data" 3 357 "*int8"
V L "len" 3 357 "int8"
V L "stat" 3 357 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
V L "i" 3 359 "int8"
V L "ptr" 3 360 "*int8"
C L "can_getd" 3 65 1 "FUNCTION"
D G "_STDIO" 5 12 ""
D G "_STRING" 6 12 ""
D G "_STDDEF" 7 13 ""
D G "ptrdiff_t" 7 18 "unsigned int16"
D G "size_t" 7 21 "unsigned int8"
D G "wchar_t" 7 22 "char"
D G "NULL" 7 23 "0"
D G "offsetof" 7 25 "(s,f) (offsetofbit(s,f)/8)"
D G "_CTYPE" 8 12 ""
D G "islower" 8 14 "(x)  isamong(x,"abcdefghijklmnopqrstuvwxyz")"
D G "isupper" 8 15 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZ")"
D G "isalnum" 8 16 "(x)  isamong(x,"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isalpha" 8 17 "(x)  isamong(x,"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz")"
D G "isdigit" 8 18 "(x)  isamong(x,"0123456789")"
D G "isspace" 8 19 "(x)  ((x)==' ')"
D G "isxdigit" 8 20 "(x) isamong(x,"0123456789ABCDEFabcdef")"
D G "iscntrl" 8 21 "(x)  ((x)<' ')"
D G "isprint" 8 22 "(x)  ((x)>=' ')"
D G "isgraph" 8 23 "(x)  ((x)>' ')"
D G "ispunct" 8 24 "(x)  (((x)>' ')&&!isalnum(x))"
C L "memmove" 6 19 10 "FUNCTION"
F G "memmove" 6 34 "*int8(int8 len,{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv} stat,int8 n)"
V L "s1" 6 34 "*int8"
V L "s2" 6 34 "*int8"
V L "n" 6 34 "int8"
V L "sc1" 6 36 "*int8"
V L "sc2" 6 37 "*int8"
D G "strcopy" 6 54 "strcpy"
C L "strncpy" 6 19 4 "FUNCTION"
F G "strncpy" 6 61 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 6 61 "*int8"
V L "s2" 6 61 "*int8"
V L "n" 6 61 "int8"
V L "s" 6 63 "*int8"
C L "strcat" 6 19 3 "FUNCTION"
F G "strcat" 6 78 "*int8(*int8 s1,*int8 s2)"
V L "s1" 6 78 "*int8"
V L "s2" 6 78 "*int8"
V L "s" 6 80 "*int8"
C L "strncat" 6 19 2 "FUNCTION"
F G "strncat" 6 96 "*int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 6 96 "*int8"
V L "s2" 6 96 "*int8"
V L "n" 6 96 "int8"
V L "s" 6 98 "*int8"
C L "memcmp" 6 19 3 "FUNCTION"
F G "memcmp" 6 120 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 6 120 "*int8"
V L "s2" 6 120 "*int8"
V L "n" 6 120 "int8"
V L "su1" 6 122 "*int8"
V L "su2" 6 122 "*int8"
C L "strcmp" 6 19 2 "FUNCTION"
F G "strcmp" 6 134 "sint8(*int8 s1,*int8 s2)"
V L "s1" 6 134 "*int8"
V L "s2" 6 134 "*int8"
C L "strcoll" 6 19 2 "FUNCTION"
F G "strcoll" 6 144 "sint8(*int8 s1,*int8 s2)"
V L "s1" 6 144 "*int8"
V L "s2" 6 144 "*int8"
C L "strncmp" 6 19 4 "FUNCTION"
F G "strncmp" 6 157 "sint8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 6 157 "*int8"
V L "s2" 6 157 "*int8"
V L "n" 6 157 "int8"
C L "strxfrm" 6 19 3 "FUNCTION"
F G "strxfrm" 6 169 "int8(*int8 s1,*int8 s2,int8 n)"
V L "s1" 6 169 "*int8"
V L "s2" 6 169 "*int8"
V L "n" 6 169 "int8"
V L "s" 6 171 "*int8"
V L "n1" 6 172 "int8"
C L "memchr" 6 19 3 "FUNCTION"
F G "memchr" 6 191 "*int8(*int8 s,int8 c,int8 n)"
V L "s" 6 191 "*int8"
V L "c" 6 191 "int8"
V L "n" 6 191 "int8"
V L "uc" 6 193 "int8"
V L "su" 6 194 "*int8"
C L "strchr" 6 19 2 "FUNCTION"
F G "strchr" 6 205 "*int8(*int8 s,int8 c)"
V L "s" 6 205 "*int8"
V L "c" 6 205 "int8"
C L "strcspn" 6 19 4 "FUNCTION"
F G "strcspn" 6 217 "int8(*int8 s1,*int8 s2)"
V L "s1" 6 217 "*int8"
V L "s2" 6 217 "*int8"
V L "sc1" 6 219 "*int8"
V L "sc2" 6 219 "*int8"
C L "strpbrk" 6 19 4 "FUNCTION"
F G "strpbrk" 6 232 "*int8(*int8 s1,*int8 s2)"
V L "s1" 6 232 "*int8"
V L "s2" 6 232 "*int8"
V L "sc1" 6 234 "*int8"
V L "sc2" 6 234 "*int8"
C L "strrchr" 6 19 2 "FUNCTION"
F G "strrchr" 6 247 "*int8(*int8 s,int8 c)"
V L "s" 6 247 "*int8"
V L "c" 6 247 "int8"
V L "p" 6 249 "*int8"
C L "strspn" 6 19 2 "FUNCTION"
F G "strspn" 6 262 "int8(*int8 s1,*int8 s2)"
V L "s1" 6 262 "*int8"
V L "s2" 6 262 "*int8"
V L "sc1" 6 264 "*int8"
V L "sc2" 6 264 "*int8"
C L "strstr" 6 19 6 "FUNCTION"
F G "strstr" 6 281 "*int8(*int8 s1,*int8 s2)"
V L "s1" 6 281 "*int8"
V L "s2" 6 281 "*int8"
V L "s" 6 283 "*int8"
V L "t" 6 283 "*int8"
C L "strtok" 6 19 13 "FUNCTION"
F G "strtok" 6 320 "*int8(*int8 s1,*int8 s2)"
V L "s1" 6 320 "*int8"
V L "s2" 6 320 "*int8"
V L "beg" 6 322 "*int8"
V L "end" 6 322 "*int8"
V L "save" 6 323 "*int8"
C L "strlen" 6 19 6 "FUNCTION"
F G "strlen" 6 369 "int8(*int8 s)"
V L "s" 6 369 "*int8"
V L "sc" 6 371 "*int8"
C L "stricmp" 6 19 2 "FUNCTION"
F G "stricmp" 6 380 "sint8(*int8 s1,*int8 s2)"
V L "s1" 6 380 "*int8"
V L "s2" 6 380 "*int8"
C L "strlwr" 6 19 3 "FUNCTION"
F G "strlwr" 6 394 "*int8(*int8 s)"
V L "s" 6 394 "*int8"
V L "p" 6 396 "*int8"
D G "_STDLIB" 9 12 ""
D G "RAND_MAX" 9 19 "32767" "The value of which is the maximum value"
D G "LONG_POINTERS" 9 25 "1"
T G "div_t" 9 33 "{sint8 quot,sint8 rem}"
T G "ldiv_t" 9 38 "{sint16 quot,sint16 rem}" "(C) Copyright 1996,2003 Custom Computer Services           ////"
C L "atof" 7 3 6 "FUNCTION"
C L "atof" 9 43 2 "FUNCTION"
C L "atof" 9 46 1 "*"
C L "atof" 9 46 1 "*"
F G "atof" 9 50 "float(*int8 s)"
V L "s" 9 50 "*int8"
C L "atof" 9 46 1 "FUNCTION"
C L "atof" 9 76 1 "*"
C L "atof" 9 76 1 "*"
C L "atof" 9 76 1 "*"
F G "atoe" 9 82 "float(*int8 s)"
V L "s" 9 82 "*int8"
C L "atoe" 9 76 1 "FUNCTION"
C L "atoe" 9 89 1 "*"
C L "atoe" 9 89 1 "*"
F G "atoi" 9 93 "sint8(*int8 s)"
V L "s" 9 93 "*int8" "Syntax: signed int32  atoi32(char * s)"
F G "atoi32" 9 101 "sint32(*int8 s)"
V L "s" 9 101 "*int8"
C L "atoi32" 9 89 3 "FUNCTION"
F G "itoa" 9 122 "*int8(sint32 num,int8 base,*int8 s)"
V L "num" 9 122 "sint32"
V L "base" 9 122 "int8"
V L "s" 9 122 "*int8" "Standard template: signed int16  atol(char * s)"
C L "itoa" 9 124 1 "*"
C L "itoa" 9 124 1 "*"
F G "atol" 9 128 "sint16(*int8 s)"
V L "s" 9 128 "*int8" "Standard template: float32 strtod(char * s,char *endptr)"
C L "atol" 9 130 1 "*"
C L "atol" 9 130 1 "*"
C L "atol" 9 130 3 "*"
F G "strtod" 9 138 "float(*int8 s,*int8 endptr)"
V L "s" 9 138 "*int8"
V L "endptr" 9 138 "*int8" "Standart template: float32 strto(char * s,char *endptr)"
C L "strtod" 9 130 2 "FUNCTION"
C L "strtod" 9 141 1 "*"
C L "strtod" 9 141 1 "*"
C L "strtod" 9 141 2 "*"
C L "strtod" 9 154 1 "*"
C L "strtod" 9 154 1 "*"
C L "strtod" 9 154 1 "*"
C L "strtod" 9 154 1 "*"
F G "strtol" 9 160 "sint16(*int8 s,*int8 endptr,sint8 base)"
V L "s" 9 160 "*int8"
V L "endptr" 9 160 "*int8"
V L "base" 9 160 "sint8" "Standard template: int16 strtoul(char * s,char *endptr,signed int base)"
C L "strtol" 9 162 1 "*"
C L "strtol" 9 162 1 "*"
C L "strtol" 9 162 1 "*"
C L "strtol" 9 162 1 "*"
F G "strtoul" 9 168 "int16(*int8 s,*int8 endptr,sint8 base)"
V L "s" 9 168 "*int8"
V L "endptr" 9 168 "*int8"
V L "base" 9 168 "sint8" "Pseudo-random sequence generation functions"
C L "strtoul" 9 162 1 "FUNCTION"
C L "strtoul" 9 174 1 "*"
C L "strtoul" 9 174 1 "*"
C L "strtoul" 9 174 1 "*"
C L "strtoul" 9 174 1 "*"
C L "strtoul" 9 174 1 "*"
F G "rand" 9 183 "int16()"
C L "rand" 9 174 1 "FUNCTION"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
C L "rand" 9 185 1 "*"
F G "srand" 9 205 "void(int32 seed)"
V L "seed" 9 205 "int32" "Memory management functions"
C L "srand" 9 185 3 "FUNCTION"
F G "system" 9 219 "sint8(*int8 string)"
V L "string" 9 219 "*int8" "Searching and sorting utilities"
C L "system" 9 185 1 "FUNCTION"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 1 "*"
C L "system" 9 225 4 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
C L "system" 9 243 1 "*"
D G "labs" 9 263 "abs"
F G "div" 9 265 "div_t(sint8 numer,sint8 denom)"
V L "numer" 9 265 "sint8"
V L "denom" 9 265 "sint8"
F G "ldiv" 9 266 "ldiv_t(sint16 numer,sint16 denom)"
V L "numer" 9 266 "sint16"
V L "denom" 9 266 "sint16" "Multibyte character functions"
C L "ldiv" 9 243 4 "FUNCTION"
C L "ldiv" 7 2 7 "FUNCTION"
C L "ldiv" 6 2 7 "FUNCTION"
F G "div" 9 288 "div_t()"
V L "numer" 9 288 "sint8"
V L "denom" 9 288 "sint8"
V L "val" 9 290 "div_t"
F G "ldiv" 9 296 "ldiv_t()"
V L "numer" 9 296 "sint16"
V L "denom" 9 296 "sint16"
V L "val" 9 298 "ldiv_t"
F G "atof" 9 305 "float()"
V L "s" 9 305 "*int8"
V L "pow10" 9 307 "float"
V L "result" 9 308 "float"
V L "sign" 9 309 "int8"
V L "c" 9 310 "int8"
V L "ptr" 9 311 "int8"
F G "atoe" 9 536 "float()"
V L "s" 9 536 "*int8"
V L "pow10" 9 538 "float"
V L "result" 9 539 "float"
V L "sign" 9 540 "int8"
V L "expsign" 9 541 "int8"
V L "c" 9 542 "int8"
V L "ptr" 9 543 "int8"
V L "i" 9 544 "int8"
V L "exp" 9 545 "float"
V L "expcnt" 9 546 "int8"
C L "atoe" 9 572 1 "FUNCTION"
F G "atoi" 9 604 "sint8()"
V L "s" 9 604 "*int8"
V L "result" 9 606 "sint8"
V L "sign" 9 607 "int8"
V L "base" 9 607 "int8"
V L "index" 9 607 "int8"
V L "c" 9 608 "int8"
C L "atoi" 9 572 1 "FUNCTION"
C L "atoi" 9 572 1 "FUNCTION"
C L "atoi" 9 572 1 "FUNCTION"
C L "atoi" 9 572 1 "FUNCTION"
C L "atoi" 9 572 1 "FUNCTION"
C L "atoi" 9 572 1 "FUNCTION"
F G "atol" 9 673 "sint16()"
V L "s" 9 673 "*int8"
V L "result" 9 675 "sint16"
V L "sign" 9 676 "int8"
V L "base" 9 676 "int8"
V L "index" 9 676 "int8"
V L "c" 9 677 "int8"
C L "atol" 9 572 1 "FUNCTION"
C L "atol" 9 572 1 "FUNCTION"
C L "atol" 9 572 1 "FUNCTION"
C L "atol" 9 572 1 "FUNCTION"
C L "mult_with10" 9 572 1 "FUNCTION"
F G "mult_with10" 9 740 "sint32(int32 num)"
V L "num" 9 740 "int32"
F G "atoi32" 9 746 "sint32()"
V L "s" 9 746 "*int8"
V L "result" 9 748 "sint32"
V L "sign" 9 749 "int8"
V L "base" 9 749 "int8"
V L "index" 9 749 "int8"
V L "c" 9 750 "int8"
C L "atoi32" 9 572 1 "FUNCTION"
C L "atoi32" 9 572 1 "FUNCTION"
C L "atoi32" 9 572 1 "FUNCTION"
C L "atoi32" 9 572 1 "FUNCTION"
C L "atoi32" 9 572 1 "FUNCTION"
F G "itoa" 9 945 "*int8()"
V L "num" 9 945 "sint32"
V L "base" 9 945 "int8"
V L "s" 9 945 "*int8"
V L "temp" 9 947 "int32"
V L "i" 9 948 "int8"
V L "sign" 9 948 "int8"
V L "cnt" 9 948 "int8"
V L "c" 9 949 "int8"
C L "itoa" 9 572 1 "FUNCTION"
C L "itoa" 9 572 1 "FUNCTION"
C L "itoa" 9 572 1 "FUNCTION"
C L "itoa" 9 572 1 "FUNCTION"
C L "itoa" 9 572 1 "FUNCTION"
F G "strtod" 9 983 "float()"
V L "s" 9 983 "*int8"
V L "endptr" 9 983 "*int8"
V L "pow10" 9 984 "float"
V L "result" 9 985 "float"
V L "sign" 9 986 "int8"
V L "point" 9 986 "int8"
V L "c" 9 987 "int8"
V L "ptr" 9 988 "int8"
F G "strtoul" 9 1245 "int16()"
V L "s" 9 1245 "*int8"
V L "endptr" 9 1245 "*int8"
V L "base" 9 1245 "sint8"
V L "sc" 9 1247 "*int8"
V L "s1" 9 1247 "*int8"
V L "sd" 9 1247 "*int8"
V L "x" 9 1248 "int16"
V L "sign" 9 1249 "int8"
V L "digits" 9 1250 "int8[1]"
C L "strtoul" 9 572 1 "FUNCTION"
C L "strtoul" 9 572 1 "FUNCTION"
C L "strtoul" 9 572 1 "FUNCTION"
F G "strtol" 9 1307 "sint16()"
V L "s" 9 1307 "*int8"
V L "endptr" 9 1307 "*int8"
V L "base" 9 1307 "sint8"
V L "sc" 9 1309 "*int8"
V L "s1" 9 1309 "*int8"
V L "sd" 9 1309 "*int8"
V L "x" 9 1310 "sint16"
V L "sign" 9 1311 "int8"
V L "digits" 9 1312 "int8[1]"
C L "strtol" 9 572 1 "FUNCTION"
C L "strtol" 9 572 1 "FUNCTION"
C L "strtol" 9 572 1 "FUNCTION"
F G "system" 9 1370 "sint8(*int8 s,int8 n)"
V L "string" 9 1370 "*int8"
F G "mblen" 9 1375 "int8(*int8 string,int8 n)"
V L "s" 9 1375 "*int8"
V L "n" 9 1375 "int8"
F G "mbtowc" 9 1380 "int8(*int8 pwc,*int8 s,int8 n)"
V L "pwc" 9 1380 "*int8"
V L "s" 9 1380 "*int8"
V L "n" 9 1380 "int8"
F G "wctomb" 9 1386 "int8(*int8 s,int8 wchar)"
V L "s" 9 1386 "*int8"
V L "wchar" 9 1386 "int8"
F G "mbstowcs" 9 1392 "int8(*int8 pwcs,*int8 s,int8 n)"
V L "pwcs" 9 1392 "*int8"
V L "s" 9 1392 "*int8"
V L "n" 9 1392 "int8"
F G "wcstombs" 9 1398 "int8(*int8 s,*int8 pwcs,int8 n)"
V L "s" 9 1398 "*int8"
V L "pwcs" 9 1398 "*int8"
V L "n" 9 1398 "int8"
V G "_Randseed" 9 1408 "int32"
F G "rand" 9 1410 "int16(int16 ,int16 )"
F G "srand" 9 1416 "void(*int8 p1,*int8 p2)"
V L "seed" 9 1416 "int32"
T G "*_Cmpfun" 9 1426 "sint8(int32 seed,*int8 p2)"
V L "p1" 9 1426 "*int8"
V L "p2" 9 1426 "*int8"
F G "qsort" 9 1433 "void(*int8 qdata,int8 qitems,int8 qsize,_Cmpfun cmp)"
V L "qdata" 9 1433 "*int8"
V L "qitems" 9 1433 "int8"
V L "qsize" 9 1433 "int8"
V L "cmp" 9 1433 "_Cmpfun"
V L "m" 9 1434 "int8"
V L "j" 9 1434 "int8"
V L "i" 9 1434 "int8"
V L "l" 9 1434 "int8"
V L "done" 9 1435 "int1"
V L "t" 9 1436 "int8[16]"
F G "bsearch" 9 1461 "*int8(*int8 key,*int8 base,int8 num,int8 width,_Cmpfun cmp)"
V L "key" 9 1461 "*int8"
V L "base" 9 1461 "*int8"
V L "num" 9 1461 "int8"
V L "width" 9 1461 "int8"
V L "cmp" 9 1461 "_Cmpfun"
V L "p" 9 1463 "*int8"
V L "q" 9 1463 "*int8"
V L "n" 9 1464 "int8"
V L "pivot" 9 1465 "int8"
V L "val" 9 1466 "sint8"
C L "bsearch" 9 572 1 "FUNCTION"
C G "" 11 1 1 "*"
C G "" 11 1 1 "*"
D G "PACKET_H_" 11 9 ""
D G "IRCOMMID" 11 52 "1"
D G "RFCOMMID" 11 53 "2"
D G "RFIDCOMMID" 11 54 "3"
D G "CANCOMMID" 11 55 "4"
T G "Packet" 11 66 "{int8 COM,int8 Team,int16 Player,int8 Subroutine,int16 Process,int16 ReturnValue,int8 Checksum}" "subroutines"
C L "Incoming_Packet_Parser" 11 1 1 "FUNCTION"
F G "Incoming_Packet_Parser" 11 74 "Packet(*int8 Current_Packet,int8 size)"
V L "Current_Packet" 11 74 "int8[1]"
V L "size" 11 74 "int8" "Input a Packet and an array of data is returned ready to be transmitted."
F G "PacketBuilder" 11 77 "void(Packet CurrentPacket,*int8 PacketBuffer)"
V L "CurrentPacket" 11 77 "Packet"
V L "PacketBuffer" 11 77 "int8[1]"
F G "fletcher16" 11 79 "int8(*int8 data,int8 len)"
V L "data" 11 79 "*int8"
V L "len" 11 79 "int8" "Packet Packet_Input();"
C L "fletcher16" 11 1 2 "FUNCTION"
F G "Integrity_Check" 11 87 "int8(*int8 data)"
V L "data" 11 87 "*int8" "PACKET_H_ *"
F G "Incoming_Packet_Parser" 10 3 "Packet()"
V L "Current_Packet" 10 3 "int8[1]"
V L "size" 10 3 "int8"
V L "packetinput" 10 5 "Packet"
F G "Integrity_Check" 10 48 "int8(int8 size)"
V L "data" 10 48 "*int8"
V L "checka" 10 50 "int8"
V L "checkb" 10 50 "int8"
V L "IntegrityCHK" 10 51 "int8"
F G "PacketBuilder" 10 63 "void()"
V L "CurrentPacket" 10 63 "Packet"
V L "PacketBuffer" 10 63 "*int8"
V L "chka" 10 65 "int8"
V L "chkb" 10 65 "int8"
F G "fletcher16" 10 99 "int8()"
V L "data" 10 99 "*int8"
V L "len" 10 99 "int8"
V L "tlen" 10 101 "int8"
V L "sum1" 10 102 "int16"
V L "sum2" 10 102 "int16"
C L "fletcher16" 10 116 1 "FUNCTION"
C L "fletcher16" 10 119 1 "*checkA"
C L "fletcher16" 10 120 1 "*checkB"
V G "ir_start" 12 23 "int1"
V G "ir_bit" 12 24 "int8[64]"
V G "IR_buffer" 12 25 "int8[8]"
V G "ir_bit_count" 12 26 "int8"
V G "IR_data_ready" 12 27 "int1"
F G "decode_IR" 12 29 "void()" "decode the 64 values stored into an 8 byte packet"
V L "i" 12 32 "int8"
V L "h" 12 33 "int8"
V L "index" 12 34 "int8"
C L "decode_IR" 12 1 1 "FUNCTION"
C L "decode_IR" 12 1 1 "FUNCTION"
C L "decode_IR" 12 1 1 "FUNCTION"
C L "decode_IR" 12 1 1 "FUNCTION"
C L "decode_IR" 12 1 1 "FUNCTION"
F G "EXT_isr" 12 65 "void()"
C L "EXT_isr" 12 1 2 "FUNCTION"
C L "EXT_isr" 12 1 1 "FUNCTION"
C L "EXT_isr" 12 1 1 "FUNCTION"
C L "EXT_isr" 12 1 1 "FUNCTION"
C L "EXT_isr" 12 1 1 "FUNCTION"
C L "EXT_isr" 12 1 1 "FUNCTION"
C L "EXT_isr" 12 1 1 "FUNCTION"
F G "TIMER2_isr" 12 85 "void()"
C L "TIMER2_isr" 12 1 1 "FUNCTION"
C L "TIMER2_isr" 12 1 1 "FUNCTION"
V G "rx_len" 1 54 "int8"
V G "rx_id" 1 55 "int32"
V G "can_waiting" 1 56 "int1"
V G "rxstat" 1 57 "{int1 err_ovfl,int3 filthit,int1 buffer,int1 rtr,int1 ext,int1 inv}"
V G "CAN_data_ready" 1 58 "int1"
V G "CAN_buffer" 1 59 "int8[9]" "light flashing enable vars"
V G "green_countdown" 1 62 "int8"
V G "yellow_countdown" 1 63 "int8"
V G "red_countdown" 1 64 "int8" "prototypes"
F G "initialize" 1 67 "void()"
F G "update_lights" 1 68 "void(float rat)"
V L "rat" 1 68 "float"
F G "change_lights" 1 69 "void(int16 Process)"
V L "Process" 1 69 "int16"
F G "initialize" 1 71 "void()"
C L "initialize" 1 53 1 "FUNCTION"
C L "initialize" 1 53 1 "FUNCTION"
F G "MAIN" 0 3 "void()"
V L "CAN_packet" 0 5 "Packet"
V L "ratio" 0 6 "float"
V L "current_health" 0 7 "int16"
V L "max_health" 0 7 "int16"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 2 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 2 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "MAIN" 0 13 1 "FUNCTION"
C L "canrx0_int" 0 13 1 "FUNCTION"
F G "canrx0_int" 0 64 "void()"
C L "canrx0_int" 0 13 2 "FUNCTION"
C L "canrx0_int" 0 13 1 "FUNCTION"
C L "canrx0_int" 0 13 1 "FUNCTION"
F G "update_lights" 0 72 "void()"
V L "rat" 0 72 "float" "update light sequence based on rat argument using change_lights();"
F G "change_lights" 0 118 "void(int16 Process)"
V L "Process" 0 118 "int16" "change the lights based on process argument"
C L "change_lights" 0 13 3 "FUNCTION"
F G "TIMER0_isr" 0 154 "void(int16 Process)"
C L "TIMER0_isr" 0 13 1 "FUNCTION"
F B "reset_cpu" 0 0
F B "abs" 1 0
F B "sleep" 0 0
F B "delay_cycles" 1 0
F B "read_bank" 2 0
F B "write_bank" 3 0
F B "shift_left" 2 2
F B "shift_right" 2 2
F B "rotate_left" 2 0
F B "rotate_right" 2 0
F B "_mul" 2 0
F B "memset" 3 0
F B "isamoung" 2 0
F B "isamong" 2 0
F B "bit_set" 2 0
F B "bit_clear" 2 0
F B "bit_test" 2 0
F B "toupper" 1 0
F B "tolower" 1 0
F B "swap" 1 0
F B "printf" 1 255
F B "fprintf" 1 255
F B "sprintf" 1 255
F B "make8" 2 0
F B "make16" 2 0
F B "make32" 1 255
F B "label_address" 1 1
F B "goto_address" 1 0
F B "_va_arg" 1 0
F B "offsetofbit" 2 2
F B "enable_interrupts" 1 0
F B "disable_interrupts" 1 0
F B "interrupt_active" 1 0
F B "clear_interrupt" 1 0
F B "jump_to_isr" 1 0
F B "ext_int_edge" 1 2
F B "read_eeprom" 1 0
F B "write_eeprom" 2 0
F B "read_program_eeprom" 1 0
F B "write_program_eeprom" 2 0
F B "write_program_memory" 3 0
F B "read_program_memory" 3 0
F B "erase_program_eeprom" 1 0
F B "read_external_memory" 3 0
F B "write_external_memory" 3 0
F B "setup_external_memory" 1 0
F B "write_configuration_memory" 2 3
F B "read_configuration_memory" 2 3
F B "strcpy" 2 0
F B "memcpy" 3 0
F B "output_high" 1 0
F B "output_low" 1 0
F B "input" 1 0
F B "input_state" 1 0
F B "output_float" 1 0
F B "output_drive" 1 0
F B "output_bit" 1 1
F B "output_toggle" 1 0
F B "output_a" 1 0
F B "output_b" 1 0
F B "output_c" 1 0
F B "output_e" 1 0
F B "input_a" 0 0
F B "input_b" 0 0
F B "input_c" 0 0
F B "input_e" 0 0
F B "set_tris_a" 1 0
F B "set_tris_b" 1 0
F B "set_tris_c" 1 0
F B "set_tris_e" 1 0
F B "get_tris_a" 0 0
F B "get_tris_b" 0 0
F B "get_tris_c" 0 0
F B "get_tris_e" 0 0
F B "port_b_pullups" 1 0
F B "setup_counters" 2 0
F B "setup_wdt" 1 0
F B "restart_cause" 0 0
F B "restart_wdt" 0 0
F B "get_rtcc" 0 0
F B "set_rtcc" 1 0
F B "get_timer0" 0 0
F B "set_timer0" 1 0
F B "setup_port_a" 1 0
F B "setup_adc_ports" 1 0
F B "setup_adc" 1 0
F B "set_adc_channel" 1 0
F B "read_adc" 0 1
F B "adc_done" 0 0
F B "setup_timer_0" 1 0
F B "setup_vref" 1 0
F B "setup_timer_1" 1 0
F B "get_timer1" 0 0
F B "set_timer1" 1 0
F B "setup_timer_2" 3 0
F B "get_timer2" 0 0
F B "set_timer2" 1 0
F B "setup_timer_3" 1 0
F B "set_timer3" 1 0
F B "get_timer3" 0 0
F B "setup_ccp1" 1 0
F B "set_pwm1_duty" 1 0
F B "setup_low_volt_detect" 1 0
F B "setup_oscillator" 1 2
F B "setup_spi" 1 0
F B "spi_read" 0 1
F B "spi_write" 1 0
F B "spi_data_is_in" 0 0
F B "setup_spi2" 1 0
F B "spi_read2" 0 1
F B "spi_write2" 1 0
F B "spi_data_is_in2" 0 0
F B "brownout_enable" 1 0
F B "delay_ms" 1 0
F B "delay_us" 1 0
F B "putchar" 1 2
F B "puts" 1 2
F B "getch" 0 1
F B "gets" 1 3
F B "kbhit" 0 1
F B "set_uart_speed" 1 3
F B "setup_uart" 1 3
